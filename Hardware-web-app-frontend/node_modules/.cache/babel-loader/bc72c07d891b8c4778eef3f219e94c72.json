{"ast":null,"code":"import React,{useState}from\"react\";import{Form,Button,Alert}from'react-bootstrap';import{Link}from\"react-router-dom\";import{useForm}from'react-hook-form';const SignUpPage=()=>{const{register,handleSubmit,reset,formState:{errors}}=useForm();const[show,setShow]=useState(false);const[serverResponse,setServerResponse]=useState('');const submitForm=data=>{if(data.password===data.confirmPassword){const body={username:data.username,email:data.email,password:data.password};const requestOPtions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)};fetch('/auth/signup',requestOPtions).then(response=>response.json()).then(data=>{setServerResponse(data.message);console.log(serverResponse);console.log(data);//alert(\"Registration Successful\")\nsetShow(true);}).catch(error=>console.error('Error:',error));reset();}else{alert(\"Passwords do not match\");}};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form\"},show?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Alert,{variant:\"success\",onClose:()=>setShow(false),dismissible:true},/*#__PURE__*/React.createElement(\"p\",null,serverResponse)),/*#__PURE__*/React.createElement(\"h1\",null,\"Sign Up Page\")):/*#__PURE__*/React.createElement(\"h1\",null,\"Sign Up Page\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(submitForm)},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Username\"),/*#__PURE__*/React.createElement(Form.Control,Object.assign({type:\"text\",placeholder:\"Your username\"},register(\"username\",{required:true,maxLength:100}))),errors.username&&/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},/*#__PURE__*/React.createElement(\"small\",null,\"Username is required\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Email\"),/*#__PURE__*/React.createElement(Form.Control,Object.assign({type:\"email\",placeholder:\"Your email\"},register(\"email\",{required:true,maxLength:100}))),errors.email&&/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},/*#__PURE__*/React.createElement(\"small\",null,\"Email is required\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,Object.assign({type:\"password\",placeholder:\"Create pasword\"},register(\"password\",{required:true,minLength:8}))),errors.password&&/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},/*#__PURE__*/React.createElement(\"small\",null,\"Password is required and must be at least 8 characters long\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Confirm Password\"),/*#__PURE__*/React.createElement(Form.Control,Object.assign({type:\"password\",placeholder:\"Your password\"},register(\"confirmPassword\",{required:true,minLength:8}))),errors.confirmPassword&&/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},/*#__PURE__*/React.createElement(\"small\",null,\"Passwords do not match\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\",onClick:handleSubmit(submitForm)},\"Sign Up\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(\"small\",null,\"Already have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Login\"))))));};export default SignUpPage;","map":{"version":3,"names":["React","useState","Form","Button","Alert","Link","useForm","SignUpPage","register","handleSubmit","reset","formState","errors","show","setShow","serverResponse","setServerResponse","submitForm","data","password","confirmPassword","body","username","email","requestOPtions","method","headers","JSON","stringify","fetch","then","response","json","message","console","log","catch","error","alert","createElement","className","Fragment","variant","onClose","dismissible","onSubmit","Group","Label","Control","Object","assign","type","placeholder","required","maxLength","style","color","minLength","onClick","to"],"sources":["/home/bleh/Hardware-web-app-frontend/src/SignUpPage.js"],"sourcesContent":["\nimport React, {useState} from \"react\";\nimport {Form,Button, Alert} from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport {useForm} from 'react-hook-form'\n\n\nconst SignUpPage =()=>{\n\n    const {register, handleSubmit,reset, formState: {errors}} = useForm();\n    const [show, setShow] = useState(false);\n\n    const [serverResponse, setServerResponse] = useState('')\n\n    const submitForm = (data) => {\n\n      if (data.password === data.confirmPassword){\n\n        const body={\n            username: data.username,\n            email: data.email,\n            password: data.password\n        }\n\n      const requestOPtions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }\n\n      fetch('/auth/signup', requestOPtions)\n       .then(response => response.json())\n       .then(data => {\n        setServerResponse(data.message)\n        console.log(serverResponse)\n          console.log(data);\n          //alert(\"Registration Successful\")\n\n          setShow(true);\n        })\n        .catch(error => console.error('Error:', error));\n\n      reset()\n\n    }\n    else{\n      alert(\"Passwords do not match\")\n    }\n\n}\n    \n  \n\n    return (\n        <div className=\"container\">\n            <div className=\"form\">\n               \n          {show?\n          <>\n          <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                \n                <p>\n               {serverResponse}\n                </p>\n              </Alert>\n           <h1>Sign Up Page</h1>\n                \n              </>\n              :\n              <h1>Sign Up Page</h1>\n\n          }\n                <form onSubmit={handleSubmit(submitForm)}>\n                     <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Your username\"\n                        {...register(\"username\",{required:true, maxLength:100})} \n                        />\n                        \n                        {errors.username && <p style={{color:\"red\"}}><small>Username is required</small></p>}\n\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Your email\"\n                        {...register(\"email\",{required:true, maxLength:100})}\n                        />\n                        \n                        {errors.email && <p style={{color:\"red\"}}><small>Email is required</small></p>}\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Create pasword\" \n                        {...register(\"password\",{required:true, minLength:8})}\n                         \n                         />\n                         \n                         {errors.password && <p style={{color:\"red\"}}><small>Password is required and must be at least 8 characters long</small></p>}\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Your password\"\n                         {...register(\"confirmPassword\",{required:true, minLength:8})}\n                        />\n                         \n                         {errors.confirmPassword && <p style={{color:\"red\"}}><small>Passwords do not match</small></p>}\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit(submitForm)}>\n                            Sign Up\n                        </Button>\n                     </Form.Group> \n                     <br></br>\n                     <Form.Group>\n                            <small>\n                              Already have an account? <Link to=\"/login\">Login</Link>\n                            </small> \n                         </Form.Group>\n                </form>\n            </div>\n        </div>\n    )\n\n}\n\nexport default SignUpPage;"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAAQC,IAAI,CAACC,MAAM,CAAEC,KAAK,KAAO,iBAAiB,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAAQC,OAAO,KAAO,iBAAiB,CAGvC,KAAM,CAAAC,UAAU,CAAEA,CAAA,GAAI,CAElB,KAAM,CAACC,QAAQ,CAAEC,YAAY,CAACC,KAAK,CAAEC,SAAS,CAAE,CAACC,MAAM,CAAC,CAAC,CAAGN,OAAO,CAAC,CAAC,CACrE,KAAM,CAACO,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAEvC,KAAM,CAACc,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAExD,KAAM,CAAAgB,UAAU,CAAIC,IAAI,EAAK,CAE3B,GAAIA,IAAI,CAACC,QAAQ,GAAKD,IAAI,CAACE,eAAe,CAAC,CAEzC,KAAM,CAAAC,IAAI,CAAC,CACPC,QAAQ,CAAEJ,IAAI,CAACI,QAAQ,CACvBC,KAAK,CAAEL,IAAI,CAACK,KAAK,CACjBJ,QAAQ,CAAED,IAAI,CAACC,QACnB,CAAC,CAEH,KAAM,CAAAK,cAAc,CAAG,CACrBC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDL,IAAI,CAAEM,IAAI,CAACC,SAAS,CAACP,IAAI,CAC3B,CAAC,CAEDQ,KAAK,CAAC,cAAc,CAAEL,cAAc,CAAC,CACnCM,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACZ,IAAI,EAAI,CACbF,iBAAiB,CAACE,IAAI,CAACe,OAAO,CAAC,CAC/BC,OAAO,CAACC,GAAG,CAACpB,cAAc,CAAC,CACzBmB,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC,CACjB;AAEAJ,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAC,CACDsB,KAAK,CAACC,KAAK,EAAIH,OAAO,CAACG,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAAC,CAEjD3B,KAAK,CAAC,CAAC,CAET,CAAC,IACG,CACF4B,KAAK,CAAC,wBAAwB,CAAC,CACjC,CAEJ,CAAC,CAIG,mBACItC,KAAA,CAAAuC,aAAA,QAAKC,SAAS,CAAC,WAAW,eACtBxC,KAAA,CAAAuC,aAAA,QAAKC,SAAS,CAAC,MAAM,EAEtB3B,IAAI,cACLb,KAAA,CAAAuC,aAAA,CAAAvC,KAAA,CAAAyC,QAAA,mBACAzC,KAAA,CAAAuC,aAAA,CAACnC,KAAK,EAACsC,OAAO,CAAC,SAAS,CAACC,OAAO,CAAEA,CAAA,GAAM7B,OAAO,CAAC,KAAK,CAAE,CAAC8B,WAAW,oBAE7D5C,KAAA,CAAAuC,aAAA,UACAxB,cACG,CACE,CAAC,cACXf,KAAA,CAAAuC,aAAA,WAAI,cAAgB,CAEf,CAAC,cAEHvC,KAAA,CAAAuC,aAAA,WAAI,cAAgB,CAAC,cAGnBvC,KAAA,CAAAuC,aAAA,SAAMM,QAAQ,CAAEpC,YAAY,CAACQ,UAAU,CAAE,eACpCjB,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC4C,KAAK,mBACR9C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC6C,KAAK,MAAC,UAAoB,CAAC,cACjC/C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC8C,OAAO,CAAAC,MAAA,CAAAC,MAAA,EAACC,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,eAAe,EACjD5C,QAAQ,CAAC,UAAU,CAAC,CAAC6C,QAAQ,CAAC,IAAI,CAAEC,SAAS,CAAC,GAAG,CAAC,CAAC,CACtD,CAAC,CAED1C,MAAM,CAACU,QAAQ,eAAItB,KAAA,CAAAuC,aAAA,MAAGgB,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,eAACxD,KAAA,CAAAuC,aAAA,cAAO,sBAA2B,CAAI,CAE1E,CAAC,cACbvC,KAAA,CAAAuC,aAAA,UAAQ,CAAC,cACTvC,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC4C,KAAK,mBACR9C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC6C,KAAK,MAAC,OAAiB,CAAC,cAC9B/C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC8C,OAAO,CAAAC,MAAA,CAAAC,MAAA,EAACC,IAAI,CAAC,OAAO,CAACC,WAAW,CAAC,YAAY,EAC/C5C,QAAQ,CAAC,OAAO,CAAC,CAAC6C,QAAQ,CAAC,IAAI,CAAEC,SAAS,CAAC,GAAG,CAAC,CAAC,CACnD,CAAC,CAED1C,MAAM,CAACW,KAAK,eAAIvB,KAAA,CAAAuC,aAAA,MAAGgB,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,eAACxD,KAAA,CAAAuC,aAAA,cAAO,mBAAwB,CAAI,CACpE,CAAC,cACbvC,KAAA,CAAAuC,aAAA,UAAQ,CAAC,cACTvC,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC4C,KAAK,mBACR9C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC6C,KAAK,MAAC,UAAoB,CAAC,cACjC/C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC8C,OAAO,CAAAC,MAAA,CAAAC,MAAA,EAACC,IAAI,CAAC,UAAU,CAACC,WAAW,CAAC,gBAAgB,EACtD5C,QAAQ,CAAC,UAAU,CAAC,CAAC6C,QAAQ,CAAC,IAAI,CAAEI,SAAS,CAAC,CAAC,CAAC,CAAC,CAEnD,CAAC,CAED7C,MAAM,CAACO,QAAQ,eAAInB,KAAA,CAAAuC,aAAA,MAAGgB,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,eAACxD,KAAA,CAAAuC,aAAA,cAAO,6DAAkE,CAAI,CAClH,CAAC,cACbvC,KAAA,CAAAuC,aAAA,UAAQ,CAAC,cACTvC,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC4C,KAAK,mBACR9C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC6C,KAAK,MAAC,kBAA4B,CAAC,cACzC/C,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC8C,OAAO,CAAAC,MAAA,CAAAC,MAAA,EAACC,IAAI,CAAC,UAAU,CAACC,WAAW,CAAC,eAAe,EACpD5C,QAAQ,CAAC,iBAAiB,CAAC,CAAC6C,QAAQ,CAAC,IAAI,CAAEI,SAAS,CAAC,CAAC,CAAC,CAAC,CAC5D,CAAC,CAEA7C,MAAM,CAACQ,eAAe,eAAIpB,KAAA,CAAAuC,aAAA,MAAGgB,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,eAACxD,KAAA,CAAAuC,aAAA,cAAO,wBAA6B,CAAI,CACpF,CAAC,cACbvC,KAAA,CAAAuC,aAAA,UAAQ,CAAC,cACTvC,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC4C,KAAK,mBACR9C,KAAA,CAAAuC,aAAA,CAACpC,MAAM,EAACuC,OAAO,CAAC,SAAS,CAACS,IAAI,CAAC,QAAQ,CAACO,OAAO,CAAEjD,YAAY,CAACQ,UAAU,CAAE,EAAC,SAEnE,CACC,CAAC,cACbjB,KAAA,CAAAuC,aAAA,UAAQ,CAAC,cACTvC,KAAA,CAAAuC,aAAA,CAACrC,IAAI,CAAC4C,KAAK,mBACJ9C,KAAA,CAAAuC,aAAA,cAAO,2BACoB,cAAAvC,KAAA,CAAAuC,aAAA,CAAClC,IAAI,EAACsD,EAAE,CAAC,QAAQ,EAAC,OAAW,CACjD,CACE,CACf,CACL,CACJ,CAAC,CAGd,CAAC,CAED,cAAe,CAAApD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}
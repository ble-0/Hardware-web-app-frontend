{"ast":null,"code":"import React from\"react\";import{Form,Button}from'react-bootstrap';import{Link,useNavigate}from\"react-router-dom\";import{useForm}from'react-hook-form';import{login}from\"./auth\";const LoginPage=()=>{var _errors$username,_errors$password;const{register,handleSubmit,reset,formState:{errors}}=useForm();const navigate=useNavigate();const loginUser=data=>{const requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)};fetch('/auth/login',requestOptions).then(res=>{if(!res.ok){throw new Error('Login failed');}return res.json();}).then(data=>{if(data.access_token){login(data);navigate('/');}else{console.error('Access token missing in response');}}).catch(error=>console.error('Login error:',error));reset();};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Login Page\"),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Username\"),/*#__PURE__*/React.createElement(Form.Control,Object.assign({type:\"text\",placeholder:\"Your username\"},register('username',{required:true,maxLength:25})))),errors.username&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},/*#__PURE__*/React.createElement(\"small\",null,\"Username is required\")),((_errors$username=errors.username)===null||_errors$username===void 0?void 0:_errors$username.type)===\"maxLength\"&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},/*#__PURE__*/React.createElement(\"small\",null,\"Username should be 25 characters\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,Object.assign({type:\"password\",placeholder:\"Your password\"},register('password',{required:true,minLength:8})))),errors.password&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},/*#__PURE__*/React.createElement(\"small\",null,\"Password is required\")),((_errors$password=errors.password)===null||_errors$password===void 0?void 0:_errors$password.type)===\"minLength\"&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},/*#__PURE__*/React.createElement(\"small\",null,\"Password should be more than 8 characters\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\",onClick:handleSubmit(loginUser)},\"Login\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(\"small\",null,\"Do not have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/signup\"},\"Sign Up\"))))));};export default LoginPage;","map":{"version":3,"names":["React","Form","Button","Link","useNavigate","useForm","login","LoginPage","_errors$username","_errors$password","register","handleSubmit","reset","formState","errors","navigate","loginUser","data","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","ok","Error","json","access_token","console","error","catch","createElement","className","Group","Label","Control","Object","assign","type","placeholder","required","maxLength","username","style","color","minLength","password","variant","onClick","to"],"sources":["/home/bleh/Hardware-web-app-frontend/src/LoginPage.js"],"sourcesContent":["\nimport React from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { login } from \"./auth\";\n\nconst LoginPage = () => {\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const navigate = useNavigate();\n\n    const loginUser = (data) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        };\n\n        fetch('/auth/login', requestOptions)\n            .then((res) => {\n                if (!res.ok) {\n                    throw new Error('Login failed');\n                }\n                return res.json();\n            })\n            .then((data) => {\n                if (data.access_token) {\n                    login(data);\n                    navigate('/'); \n                } else {\n                    console.error('Access token missing in response');\n                }\n            })\n            .catch((error) => console.error('Login error:', error)); \n\n        reset();\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"form\">\n                <h1>Login Page</h1>\n                <form>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Your username\"\n                            {...register('username', { required: true, maxLength: 25 })}\n                        />\n                    </Form.Group>\n                    {errors.username && <p style={{ color: 'red' }}><small>Username is required</small></p>}\n                    {errors.username?.type === \"maxLength\" && <p style={{ color: 'red' }}><small>Username should be 25 characters</small></p>}\n                    <br />\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Your password\"\n                            {...register('password', { required: true, minLength: 8 })}\n                        />\n                    </Form.Group>\n                    {errors.password && <p style={{ color: 'red' }}><small>Password is required</small></p>}\n                    {errors.password?.type === \"minLength\" && <p style={{ color: 'red' }}><small>Password should be more than 8 characters</small></p>}\n                    <br />\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit(loginUser)}>\n                            Login\n                        </Button>\n                    </Form.Group>\n                    <br />\n                    <Form.Group>\n                        <small>\n                            Do not have an account? <Link to=\"/signup\">Sign Up</Link>\n                        </small>\n                    </Form.Group>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
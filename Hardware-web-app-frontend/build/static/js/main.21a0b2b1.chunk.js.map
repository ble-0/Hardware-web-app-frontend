{"version":3,"sources":["auth.js","Home.js","LoginPage.js","SignUpPage.js","CreateHardwarePage.js","Hardware.js","index.js"],"names":["useAuth","authFetch","login","logout","createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","refresh_token","then","r","json","LoggedinHardware","hardwares","setHardwares","useState","show","setShow","register","handleSubmit","setValue","formState","errors","useForm","hardwareId","setHardwareId","useEffect","getAllHardwares","res","data","catch","err","console","error","closeModal","deleteHardware","log","localStorage","getItem","access_token","JSON","parse","requestOptions","headers","Authorization","concat","ok","Error","text","React","createElement","className","style","backgroundImage","backgroundSize","backgroundPosition","height","Modal","size","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","Object","assign","type","placeholder","required","maxLength","title","color","destination","as","rows","details","date","Button","variant","onClick","stringify","status","Array","isArray","length","map","hardware","key","id","description","find","showModal","onDelete","LoggedoutHardware","Link","to","HardwarePage","logged","LoginPage","_errors$username","_errors$password","reset","navigate","useNavigate","username","minLength","password","SignUpPage","serverResponse","setServerResponse","submitForm","confirmPassword","email","requestOPtions","response","message","alert","Fragment","Alert","onClose","dismissible","onSubmit","CreateHardwarePage","tokenString","controlId","user_id","HardwareItem","_ref","userId","Card","Subtitle","Text","App","Router","Routes","Route","path","element","HomePage","ReactDOM","createRoot","document","getElementById"],"mappings":"4SAIO,MAAM,QAAEA,EAAO,UAAEC,EAAS,MAAEC,EAAK,OAAEC,GAC1CC,6BAAmB,CACfC,eAAgB,eAChBC,cAAeC,GAAUC,MAAM,gBAAiB,CACxCC,OAAQ,OACRC,KAAMH,EAAMI,gBAEfC,KAAKC,GAAKA,EAAEC,UCHfC,EAAmBA,KACvB,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAMC,GAAWF,oBAAS,IAC3B,SAAEG,EAAQ,aAAEC,EAAY,SAAEC,EAAUC,WAAW,OAAEC,IAAaC,eAC7DC,EAAYC,GAAiBV,mBAAS,GAE7CW,oBAAU,KACRC,KACC,IAEH,MAAMA,EAAkBA,KACtBtB,MAAM,sBACHI,KAAMmB,GAAQA,EAAIjB,QAClBF,KAAKoB,GAAQf,EAAae,IAC1BC,MAAMC,GAAOC,QAAQC,MAAM,4BAA6BF,KAGvDG,EAAaA,IAAMjB,GAAQ,GAyD3BkB,EAAiBA,KACrBH,QAAQI,IAAI,6BAA8BZ,GAC1C,IAAIpB,EAAQiC,aAAaC,QAAQ,wBAC7BC,EAAe,GAEnB,GAAInC,EACF,IAEEmC,EADoBC,KAAKC,MAAMrC,GACJmC,aAC3B,MAAON,GAEP,YADAD,QAAQC,MAAM,uBAAwBA,GAK1C,MAAMS,EAAiB,CACrBpC,OAAQ,SACRqC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADC,OAAYN,KAI7BlC,MAAM,sBAADwC,OAAuBrB,GAAckB,GACvCjC,KAAMmB,IACL,IAAKA,EAAIkB,GACP,MAAM,IAAIC,MAAM,6BAElB,OAAOnB,EAAIoB,SAEZvC,KAAK,KACJuB,QAAQI,IAAI,iCACZT,IACAO,MAEDJ,MAAOC,GAAQC,QAAQC,MAAM,2BAA4BF,KAG9D,OACEkB,IAAAC,cAAA,OAAKC,UAAU,sBACbC,MAAO,CACLC,gBAAiB,iCACjBC,eAAgB,QAChBC,mBAAoB,SACpBC,OAAQ,UAGVP,IAAAC,cAACO,IAAK,CAACzC,KAAMA,EAAM0C,KAAK,KAAKC,OAAQzB,GACnCe,IAAAC,cAACO,IAAMG,OAAM,CAACC,aAAW,GACvBZ,IAAAC,cAACO,IAAMK,MAAK,KAAC,oBAEfb,IAAAC,cAACO,IAAMM,KAAI,KACTd,IAAAC,cAACc,IAAI,KACHf,IAAAC,cAACc,IAAKC,MAAK,KACThB,IAAAC,cAACc,IAAKE,MAAK,KAAC,SACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,OAAOC,YAAY,eAAkBrD,EAAS,QAAS,CAAEsD,UAAU,EAAMC,UAAW,OACtGnD,EAAOoD,OAASzB,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,uBAEtDD,IAAAC,cAACc,IAAKC,MAAK,KACThB,IAAAC,cAACc,IAAKE,MAAK,KAAC,eACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,OAAOC,YAAY,qBAAwBrD,EAAS,cAAe,CAAEsD,UAAU,MACjGlD,EAAOsD,aAAe3B,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,6BAE5DD,IAAAC,cAACc,IAAKC,MAAK,KACThB,IAAAC,cAACc,IAAKE,MAAK,KAAC,WACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACQ,GAAG,WAAWC,KAAM,EAAGP,YAAY,iBAAoBrD,EAAS,UAAW,CAAEsD,UAAU,MACpGlD,EAAOyD,SAAW9B,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,0BAExDD,IAAAC,cAACc,IAAKC,MAAK,KACThB,IAAAC,cAACc,IAAKE,MAAK,KAAC,QACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,QAAWpD,EAAS,OAAQ,CAAEsD,UAAU,MAC1DlD,EAAO0D,MAAQ/B,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,sBAErDD,IAAAC,cAAC+B,IAAM,CAACC,QAAQ,UAAUC,QAAShE,EAnHrBU,IACtBG,QAAQI,IAAI,qBAAsBP,GAElC,IAAIzB,EAAQiC,aAAaC,QAAQ,wBAC7BC,EAAe,GAEnB,GAAInC,EACF,IAEEmC,EADoBC,KAAKC,MAAMrC,GACJmC,aAC3B,MAAON,GAEP,YADAD,QAAQC,MAAM,uBAAwBA,GAK1C,MAAMS,EAAiB,CACrBpC,OAAQ,MACRqC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADC,OAAYN,IAE3BhC,KAAMiC,KAAK4C,UAAUvD,IAGvBxB,MAAM,sBAADwC,OAAuBrB,GAAckB,GACvCjC,KAAMmB,GACAA,EAAIkB,GAKFlB,EAAIjB,OAJFiB,EAAIoB,OAAOvC,KAAMuC,IACtB,MAAM,IAAID,MAAM,UAADF,OAAWjB,EAAIyD,OAAM,OAAAxC,OAAMG,OAK/CvC,KAAMoB,IACLG,QAAQI,IAAI,yBAA0BP,GACtCF,IACAO,MAEDJ,MAAOC,GAAQC,QAAQC,MAAM,2BAA4BF,OA4Ea,mBACjEkB,IAAAC,cAAC+B,IAAM,CAACC,QAAQ,SAAS/B,UAAU,OAAOgC,QAAShD,GAAgB,aAKzEc,IAAAC,cAAA,UAAI,qBACHoC,MAAMC,QAAQ1E,IAAcA,EAAU2E,OAAS,EAC9C3E,EAAU4E,IAAKC,GACbzC,IAAAC,cAAA,YACEyC,IAAKD,EAASE,GACdlB,MAAOgB,EAAShB,MAChBE,YAAac,EAASd,YACtBI,KAAMU,EAASV,KACfa,YAAaH,EAASX,QACtBI,QAASA,IA/IAS,KACjBnE,EAAcmE,GACd3E,GAAQ,GAER,MAAMyE,EAAW7E,EAAUiF,KAAKJ,GAAYA,EAASE,KAAOA,GACxDF,IACFtE,EAAS,QAASsE,EAAShB,OAC3BtD,EAAS,cAAesE,EAASd,aACjCxD,EAAS,UAAWsE,EAASX,SAC7B3D,EAAS,OAAQsE,EAASV,QAsILe,CAAUL,EAASE,IAClCI,SAAUA,IAAM7D,EAAeuD,EAASE,OAI5C3C,IAAAC,cAAA,SAAG,6BAML+C,EAAoBA,IAEtBhD,IAAAC,cAAA,OAAKC,UAAU,iBACbC,MAAO,CACLC,gBAAiB,kCACjBC,eAAgB,QAChBC,mBAAoB,SACpBC,OAAQ,UAGVP,IAAAC,cAAA,UAAI,uCACJD,IAAAC,cAAA,SAAG,+DACHD,IAAAC,cAACgD,IAAI,CAACC,GAAG,UAAUhD,UAAU,mBAAkB,gBAetCiD,MAVMA,KACnB,MAAOC,GAAUxG,IAEjB,OACEoD,IAAAC,cAAA,WACGmD,EAASpD,IAAAC,cAACtC,EAAgB,MAAMqC,IAAAC,cAAC+C,EAAiB,QC3H1CK,MAzEGA,KAAO,IAADC,EAAAC,EACpB,MAAM,SAAEtF,EAAQ,aAAEC,EAAY,MAAEsF,EAAOpF,WAAW,OAAEC,IAAaC,cAC3DmF,EAAWC,cA+BjB,OACI1D,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,YACID,IAAAC,cAACc,IAAKC,MAAK,KACPhB,IAAAC,cAACc,IAAKE,MAAK,KAAC,YACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,OAAOC,YAAY,iBAC9BrD,EAAS,WAAY,CAAEsD,UAAU,EAAMC,UAAW,QAG7DnD,EAAOsF,UAAY3D,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,yBAC5B,eAAX,QAAfqD,EAAAjF,EAAOsF,gBAAQ,IAAAL,OAAA,EAAfA,EAAiBjC,OAAwBrB,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,qCAC7ED,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACPhB,IAAAC,cAACc,IAAKE,MAAK,KAAC,YACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,WAAWC,YAAY,iBAClCrD,EAAS,WAAY,CAAEsD,UAAU,EAAMqC,UAAW,OAG7DvF,EAAOwF,UAAY7D,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,yBAC5B,eAAX,QAAfsD,EAAAlF,EAAOwF,gBAAQ,IAAAN,OAAA,EAAfA,EAAiBlC,OAAwBrB,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,8CAC7ED,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACPhB,IAAAC,cAAC+B,IAAM,CAACC,QAAQ,UAAUZ,KAAK,SAASa,QAAShE,EArDlDU,IACf,MAAMa,EAAiB,CACnBpC,OAAQ,OACRqC,QAAS,CACL,eAAgB,oBAEpBpC,KAAMiC,KAAK4C,UAAUvD,IAGzBxB,MAAM,cAAeqC,GAChBjC,KAAMmB,IACH,IAAKA,EAAIkB,GACL,MAAM,IAAIC,MAAM,gBAEpB,OAAOnB,EAAIjB,SAEdF,KAAMoB,IACCA,EAAKU,cACLxC,EAAM8B,GACN6E,EAAS,MAET1E,QAAQC,MAAM,sCAGrBH,MAAOG,GAAUD,QAAQC,MAAM,eAAgBA,IAEpDwE,OA2B0F,UAI9ExD,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACPhB,IAAAC,cAAA,aAAO,2BACqBD,IAAAC,cAACgD,IAAI,CAACC,GAAG,WAAU,iB,QC4DxDY,MA5HGA,KAEd,MAAM,SAAC7F,EAAQ,aAAEC,EAAY,MAACsF,EAAOpF,WAAW,OAACC,IAAWC,eACrDP,EAAMC,GAAWF,oBAAS,IAE1BiG,EAAgBC,GAAqBlG,mBAAS,IAE/CmG,EAAcrF,IAElB,GAAIA,EAAKiF,WAAajF,EAAKsF,gBAAgB,CAEzC,MAAM5G,EAAK,CACPqG,SAAU/E,EAAK+E,SACfQ,MAAOvF,EAAKuF,MACZN,SAAUjF,EAAKiF,UAGfO,EAAiB,CACrB/G,OAAQ,OACRqC,QAAS,CACP,eAAgB,oBAElBpC,KAAMiC,KAAK4C,UAAU7E,IAGvBF,MAAM,eAAgBgH,GACpB5G,KAAK6G,GAAYA,EAAS3G,QAC1BF,KAAKoB,IACLoF,EAAkBpF,EAAK0F,SACvBvF,QAAQI,IAAI4E,GACVhF,QAAQI,IAAIP,GAGZZ,GAAQ,KAETa,MAAMG,GAASD,QAAQC,MAAM,SAAUA,IAE1CwE,SAIAe,MAAM,2BAOR,OACIvE,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,QAEhBnC,EACDiC,IAAAC,cAAAD,IAAAwE,SAAA,KACAxE,IAAAC,cAACwE,IAAK,CAACxC,QAAQ,UAAUyC,QAASA,IAAM1G,GAAQ,GAAQ2G,aAAW,GAE7D3E,IAAAC,cAAA,SACA8D,IAGL/D,IAAAC,cAAA,UAAI,iBAIDD,IAAAC,cAAA,UAAI,gBAGFD,IAAAC,cAAA,QAAM2E,SAAU1G,EAAa+F,IACxBjE,IAAAC,cAACc,IAAKC,MAAK,KACRhB,IAAAC,cAACc,IAAKE,MAAK,KAAC,YACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,OAAOC,YAAY,iBAClCrD,EAAS,WAAW,CAACsD,UAAS,EAAMC,UAAU,QAGjDnD,EAAOsF,UAAY3D,IAAAC,cAAA,KAAGE,MAAO,CAACuB,MAAM,QAAQ1B,IAAAC,cAAA,aAAO,0BAGvDD,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACRhB,IAAAC,cAACc,IAAKE,MAAK,KAAC,SACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,QAAQC,YAAY,cACnCrD,EAAS,QAAQ,CAACsD,UAAS,EAAMC,UAAU,QAG9CnD,EAAO8F,OAASnE,IAAAC,cAAA,KAAGE,MAAO,CAACuB,MAAM,QAAQ1B,IAAAC,cAAA,aAAO,uBAEpDD,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACRhB,IAAAC,cAACc,IAAKE,MAAK,KAAC,YACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,WAAWC,YAAY,kBACtCrD,EAAS,WAAW,CAACsD,UAAS,EAAMqC,UAAU,MAIhDvF,EAAOwF,UAAY7D,IAAAC,cAAA,KAAGE,MAAO,CAACuB,MAAM,QAAQ1B,IAAAC,cAAA,aAAO,iEAExDD,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACRhB,IAAAC,cAACc,IAAKE,MAAK,KAAC,oBACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CAACC,KAAK,WAAWC,YAAY,iBACrCrD,EAAS,kBAAkB,CAACsD,UAAS,EAAMqC,UAAU,MAGxDvF,EAAO6F,iBAAmBlE,IAAAC,cAAA,KAAGE,MAAO,CAACuB,MAAM,QAAQ1B,IAAAC,cAAA,aAAO,4BAE/DD,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACRhB,IAAAC,cAAC+B,IAAM,CAACC,QAAQ,UAAUZ,KAAK,SAASa,QAAShE,EAAa+F,IAAa,YAI9EjE,IAAAC,cAAA,WACAD,IAAAC,cAACc,IAAKC,MAAK,KACJhB,IAAAC,cAAA,aAAO,4BACoBD,IAAAC,cAACgD,IAAI,CAACC,GAAG,UAAS,eClB1D2B,MAlGYA,KACzB,MAAM,SAAE5G,EAAQ,aAAEC,EAAY,MAAEsF,EAAOpF,WAAW,OAAEC,IAAaC,cAqCjE,OACE0B,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAACc,IAAI,CAAC6D,SAAU1G,EAtCIU,IACtBG,QAAQI,IAAI,aAAcP,GAE1B,MAAMkG,EAAc1F,aAAaC,QAAQ,wBACzC,GAAKyF,EAKL,IACE,MACMxF,EADcC,KAAKC,MAAMsF,GACExF,aAE3BG,EAAiB,CACrBpC,OAAQ,OACRqC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADC,OAAYN,IAE3BhC,KAAMiC,KAAK4C,UAAUvD,IAGvBxB,MAAM,qBAAsBqC,GACzBjC,KAAMmB,GAAQA,EAAIjB,QAClBF,KAAMoB,IACLG,QAAQI,IAAI,YAAaP,GACzB4E,MAED3E,MAAOC,GAAQC,QAAQC,MAAM,SAAUF,IAE1C,MAAOE,GACPD,QAAQC,MAAM,uBAAwBA,QA1BtCD,QAAQI,IAAI,uCAkCVa,IAAAC,cAACc,IAAKC,MAAK,CAAC+D,UAAU,SACpB/E,IAAAC,cAACc,IAAKE,MAAK,KAAC,SACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CACXC,KAAK,OACLC,YAAY,eACRrD,EAAS,QAAS,CAAEsD,UAAU,EAAMC,UAAW,OAEpDnD,EAAOoD,OAASzB,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,uBAGtDD,IAAAC,cAACc,IAAKC,MAAK,CAAC+D,UAAU,WACpB/E,IAAAC,cAACc,IAAKE,MAAK,KAAC,WACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CACXC,KAAK,SACLC,YAAY,iBACRrD,EAAS,UAAW,CAAEsD,UAAU,MAErClD,EAAO2G,SAAWhF,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,yBAGxDD,IAAAC,cAACc,IAAKC,MAAK,CAAC+D,UAAU,eACpB/E,IAAAC,cAACc,IAAKE,MAAK,KAAC,eACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CACXC,KAAK,OACLC,YAAY,qBACRrD,EAAS,cAAe,CAAEsD,UAAU,MAEzClD,EAAOsD,aAAe3B,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,6BAG5DD,IAAAC,cAACc,IAAKC,MAAK,CAAC+D,UAAU,WACpB/E,IAAAC,cAACc,IAAKE,MAAK,KAAC,WACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CACXQ,GAAG,WACHC,KAAM,EACNP,YAAY,iBACRrD,EAAS,UAAW,CAAEsD,UAAU,MAErClD,EAAOyD,SAAW9B,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,0BAGxDD,IAAAC,cAACc,IAAKC,MAAK,CAAC+D,UAAU,QACpB/E,IAAAC,cAACc,IAAKE,MAAK,KAAC,QACZjB,IAAAC,cAACc,IAAKG,QAAOC,OAAAC,OAAA,CACXC,KAAK,QACDpD,EAAS,OAAQ,CAAEsD,UAAU,MAElClD,EAAO0D,MAAQ/B,IAAAC,cAAA,KAAGE,MAAO,CAAEuB,MAAO,QAAS1B,IAAAC,cAAA,aAAO,sBAGrDD,IAAAC,cAAC+B,IAAM,CAACC,QAAQ,UAAUZ,KAAK,UAAS,W,QC5EjC4D,MAjBMC,IAA0D,IAAzD,MAAEzD,EAAK,OAAE0D,EAAM,KAAEpD,EAAI,QAAED,EAAO,QAAEI,EAAO,SAAEa,GAAUmC,EACrE,OACIlF,IAAAC,cAACmF,IAAI,CAAClF,UAAU,gBAAgBgC,QAASA,GACrClC,IAAAC,cAACmF,IAAKtE,KAAI,KACNd,IAAAC,cAACmF,IAAKvE,MAAK,KAAEY,GACbzB,IAAAC,cAACmF,IAAKC,SAAQ,CAACnF,UAAU,mBAAkB,YAAUiF,GACrDnF,IAAAC,cAACmF,IAAKE,KAAI,KACNtF,IAAAC,cAAA,cAAQ,kBAAuB,IAAE8B,GAErC/B,IAAAC,cAACmF,IAAKE,KAAI,KAAExD,GACZ9B,IAAAC,cAAC+B,IAAM,CAACC,QAAQ,UAAUC,QAASA,GAAS,UAC5ClC,IAAAC,cAAC+B,IAAM,CAACC,QAAQ,SAASC,QAASa,GAAU,aCwB5D,MAAMwC,EAAKA,IAGHvF,IAAAC,cAACuF,IAAM,KACPxF,IAAAC,cAAA,OAAKC,UAAW,aACbF,IAAAC,cAACwF,IAAM,KACNzF,IAAAC,cAACyF,IAAK,CAACC,KAAK,IAAIC,QAAS5F,IAAAC,cAAC4F,EAAQ,QAClC7F,IAAAC,cAACyF,IAAK,CAACC,KAAK,QAAQC,QAAS5F,IAAAC,cAAC4F,EAAQ,QACtC7F,IAAAC,cAACyF,IAAK,CAACC,KAAK,SAASC,QAAS5F,IAAAC,cAACoD,EAAS,QACxCrD,IAAAC,cAACyF,IAAK,CAACC,KAAK,UAAUC,QAAS5F,IAAAC,cAAC6D,EAAU,QAC1C9D,IAAAC,cAACyF,IAAK,CAACC,KAAK,kBAAkBC,QAAS5F,IAAAC,cAAC4E,EAAkB,QAC1D7E,IAAAC,cAACyF,IAAK,CAACC,KAAK,YAAYC,QAAS5F,IAAAC,cAACgF,EAAY,WAS1Da,IAASC,WAAW/F,IAAAC,cAACsF,EAAG,MAAIS,SAASC,eAAe,W","file":"static/js/main.21a0b2b1.chunk.js","sourcesContent":["\nimport { createAuthProvider } from 'react-token-auth';\n\n\nexport const { useAuth, authFetch, login, logout } = \ncreateAuthProvider({\n    accessTokenKey: 'access_token', \n    onUpdateToken:(token) => fetch('/auth/refresh', {\n            method: 'POST',\n            body: token.refresh_token,\n        })\n        .then(r => r.json())\n})","\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuth } from \"./auth\";\n\n\nconst LoggedinHardware = () => {\n  const [hardwares, setHardwares] = useState([]);\n  const [show, setShow] = useState(false);\n  const { register, handleSubmit, setValue, formState: { errors } } = useForm();\n  const [hardwareId, setHardwareId] = useState(0); \n\n  useEffect(() => {\n    getAllHardwares();\n  }, []);\n\n  const getAllHardwares = () => {\n    fetch('/hardware/hardware')\n      .then((res) => res.json())\n      .then(data => setHardwares(data))\n      .catch(err => console.error(\"Error fetching hardwares:\", err));\n  };\n\n  const closeModal = () => setShow(false);\n\n  const showModal = (id) => {\n    setHardwareId(id);\n    setShow(true);\n    \n    const hardware = hardwares.find(hardware => hardware.id === id);\n    if (hardware) {\n      setValue('title', hardware.title);\n      setValue('destination', hardware.destination);\n      setValue('details', hardware.details);\n      setValue('date', hardware.date);\n    }\n  };\n\n  const updateHardware = (data) => {\n    console.log(\"Updating hardware:\", data);\n    \n    let token = localStorage.getItem(\"REACT_TOKEN_AUTH_KEY\");\n    let access_token = \"\";\n  \n    if (token) {\n      try {\n        const parsedToken = JSON.parse(token);\n        access_token = parsedToken.access_token;\n      } catch (error) {\n        console.error(\"Error parsing token:\", error);\n        return;\n      }\n    }\n  \n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${access_token}`,\n      },\n      body: JSON.stringify(data),\n    };\n  \n    fetch(`/hardware/hardware/${hardwareId}`, requestOptions)\n      .then((res) => {\n        if (!res.ok) {\n          return res.text().then((text) => {\n            throw new Error(`Error: ${res.status} - ${text}`);\n          });\n        }\n        return res.json(); // Only parse JSON if response is valid\n      })\n      .then((data) => {\n        console.log(\"Updated hardware data:\", data);\n        getAllHardwares();\n        closeModal();\n      })\n      .catch((err) => console.error(\"Error updating hardware:\", err));\n  };\n\n  const deleteHardware = () => {\n    console.log(\"Deleting hardware with ID:\", hardwareId);\n    let token = localStorage.getItem(\"REACT_TOKEN_AUTH_KEY\");\n    let access_token = \"\";\n\n    if (token) {\n      try {\n        const parsedToken = JSON.parse(token);\n        access_token = parsedToken.access_token;\n      } catch (error) {\n        console.error(\"Error parsing token:\", error);\n        return;\n      }\n    }\n\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${access_token}`,\n      },\n    };\n\n    fetch(`/hardware/hardware/${hardwareId}`, requestOptions)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Failed to delete hardware\");\n        }\n        return res.text(); \n      })\n      .then(() => {\n        console.log(\"Hardware deleted successfully\");\n        getAllHardwares();\n        closeModal();\n      })\n      .catch((err) => console.error(\"Error deleting hardware:\", err));\n  };\n\n  return (\n    <div className=\"hardwares container\"\n      style={{\n        backgroundImage: \"url('public/hardwarepic.jpeg')\", \n        backgroundSize: \"cover\", \n        backgroundPosition: \"center\",\n        height: \"100vh\"\n      }}\n    >\n      <Modal show={show} size=\"lg\" onHide={closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update Hardware</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter title\" {...register('title', { required: true, maxLength: 50 })} />\n              {errors.title && <p style={{ color: 'red' }}><small>Title is required</small></p>}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Destination</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter destination\" {...register('destination', { required: true })} />\n              {errors.destination && <p style={{ color: 'red' }}><small>Destination is required</small></p>}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Details</Form.Label>\n              <Form.Control as=\"textarea\" rows={5} placeholder=\"Enter details\" {...register('details', { required: true })} />\n              {errors.details && <p style={{ color: 'red' }}><small>Details are required</small></p>}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Date</Form.Label>\n              <Form.Control type=\"date\" {...register('date', { required: true })} />\n              {errors.date && <p style={{ color: 'red' }}><small>Date is required</small></p>}\n            </Form.Group>\n            <Button variant=\"primary\" onClick={handleSubmit(updateHardware)}>Update Hardware</Button>\n            <Button variant=\"danger\" className=\"ms-2\" onClick={deleteHardware}>Delete</Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <h1>List of Hardwares</h1>\n      {Array.isArray(hardwares) && hardwares.length > 0 ? (\n        hardwares.map((hardware) => (\n          <hardware\n            key={hardware.id} \n            title={hardware.title} \n            destination={hardware.destination} \n            date={hardware.date} \n            description={hardware.details} \n            onClick={() => showModal(hardware.id)} \n            onDelete={() => deleteHardware(hardware.id)} \n          />\n        ))\n      ) : (\n        <p>No hardwares available.</p>\n      )}\n    </div>\n  );\n};\n\nconst LoggedoutHardware = () => {\n  return (\n    <div className=\"home container\"\n      style={{\n        backgroundImage: \"url('/public/hardwarepic.jpeg')\", \n        backgroundSize: \"cover\", \n        backgroundPosition: \"center\",\n        height: \"100vh\"\n      }}\n    >\n      <h1>Welcome to Hardware Management Page</h1>\n      <p>Sign in to view your hardwares or Sign Up to start managing</p>\n      <Link to='/signup' className=\"btn btn-primary\">Get Started</Link>\n    </div>\n  );\n};\n\nconst HardwarePage = () => {\n  const [logged] = useAuth();\n\n  return (\n    <div>\n      {logged ? <LoggedinHardware /> : <LoggedoutHardware />}\n    </div>\n  );\n};\n\nexport default HardwarePage;","\nimport React from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { login } from \"./auth\";\n\nconst LoginPage = () => {\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const navigate = useNavigate();\n\n    const loginUser = (data) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        };\n\n        fetch('/auth/login', requestOptions)\n            .then((res) => {\n                if (!res.ok) {\n                    throw new Error('Login failed');\n                }\n                return res.json();\n            })\n            .then((data) => {\n                if (data.access_token) {\n                    login(data);\n                    navigate('/'); \n                } else {\n                    console.error('Access token missing in response');\n                }\n            })\n            .catch((error) => console.error('Login error:', error)); \n\n        reset();\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"form\">\n                <h1>Login Page</h1>\n                <form>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Your username\"\n                            {...register('username', { required: true, maxLength: 25 })}\n                        />\n                    </Form.Group>\n                    {errors.username && <p style={{ color: 'red' }}><small>Username is required</small></p>}\n                    {errors.username?.type === \"maxLength\" && <p style={{ color: 'red' }}><small>Username should be 25 characters</small></p>}\n                    <br />\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Your password\"\n                            {...register('password', { required: true, minLength: 8 })}\n                        />\n                    </Form.Group>\n                    {errors.password && <p style={{ color: 'red' }}><small>Password is required</small></p>}\n                    {errors.password?.type === \"minLength\" && <p style={{ color: 'red' }}><small>Password should be more than 8 characters</small></p>}\n                    <br />\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit(loginUser)}>\n                            Login\n                        </Button>\n                    </Form.Group>\n                    <br />\n                    <Form.Group>\n                        <small>\n                            Do not have an account? <Link to=\"/signup\">Sign Up</Link>\n                        </small>\n                    </Form.Group>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;","\nimport React, {useState} from \"react\";\nimport {Form,Button, Alert} from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport {useForm} from 'react-hook-form'\n\n\nconst SignUpPage =()=>{\n\n    const {register, handleSubmit,reset, formState: {errors}} = useForm();\n    const [show, setShow] = useState(false);\n\n    const [serverResponse, setServerResponse] = useState('')\n\n    const submitForm = (data) => {\n\n      if (data.password === data.confirmPassword){\n\n        const body={\n            username: data.username,\n            email: data.email,\n            password: data.password\n        }\n\n      const requestOPtions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }\n\n      fetch('/auth/signup', requestOPtions)\n       .then(response => response.json())\n       .then(data => {\n        setServerResponse(data.message)\n        console.log(serverResponse)\n          console.log(data);\n          //alert(\"Registration Successful\")\n\n          setShow(true);\n        })\n        .catch(error => console.error('Error:', error));\n\n      reset()\n\n    }\n    else{\n      alert(\"Passwords do not match\")\n    }\n\n}\n    \n  \n\n    return (\n        <div className=\"container\">\n            <div className=\"form\">\n               \n          {show?\n          <>\n          <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                \n                <p>\n               {serverResponse}\n                </p>\n              </Alert>\n           <h1>Sign Up Page</h1>\n                \n              </>\n              :\n              <h1>Sign Up Page</h1>\n\n          }\n                <form onSubmit={handleSubmit(submitForm)}>\n                     <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Your username\"\n                        {...register(\"username\",{required:true, maxLength:100})} \n                        />\n                        \n                        {errors.username && <p style={{color:\"red\"}}><small>Username is required</small></p>}\n\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Your email\"\n                        {...register(\"email\",{required:true, maxLength:100})}\n                        />\n                        \n                        {errors.email && <p style={{color:\"red\"}}><small>Email is required</small></p>}\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Create pasword\" \n                        {...register(\"password\",{required:true, minLength:8})}\n                         \n                         />\n                         \n                         {errors.password && <p style={{color:\"red\"}}><small>Password is required and must be at least 8 characters long</small></p>}\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Your password\"\n                         {...register(\"confirmPassword\",{required:true, minLength:8})}\n                        />\n                         \n                         {errors.confirmPassword && <p style={{color:\"red\"}}><small>Passwords do not match</small></p>}\n                     </Form.Group>\n                     <br></br>\n                     <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit(submitForm)}>\n                            Sign Up\n                        </Button>\n                     </Form.Group> \n                     <br></br>\n                     <Form.Group>\n                            <small>\n                              Already have an account? <Link to=\"/login\">Login</Link>\n                            </small> \n                         </Form.Group>\n                </form>\n            </div>\n        </div>\n    )\n\n}\n\nexport default SignUpPage;","\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\n\nconst CreateHardwarePage = () => {\n  const { register, handleSubmit, reset, formState: { errors } } = useForm();\n\n  const createHardware = (data) => {\n    console.log(\"Form Data:\", data);\n\n    const tokenString = localStorage.getItem(\"REACT_TOKEN_AUTH_KEY\");\n    if (!tokenString) {\n      console.log(\"Token not found in local storage\");\n      return;\n    }\n\n    try {\n      const parsedToken = JSON.parse(tokenString);\n      const access_token = parsedToken.access_token;\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${access_token}`,\n        },\n        body: JSON.stringify(data),\n      };\n\n      fetch(\"/hardware/hardware\", requestOptions)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\"Response:\", data);\n          reset();\n        })\n        .catch((err) => console.error(\"Error:\", err));\n\n    } catch (error) {\n      console.error(\"Error parsing token:\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Create a Hardware Item</h1>\n      <Form onSubmit={handleSubmit(createHardware)}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control \n            type=\"text\" \n            placeholder=\"Enter title\" \n            {...register(\"title\", { required: true, maxLength: 50 })} \n          />\n          {errors.title && <p style={{ color: \"red\" }}><small>Title is required</small></p>}\n        </Form.Group>\n\n        <Form.Group controlId=\"user_id\">\n          <Form.Label>User ID</Form.Label>\n          <Form.Control \n            type=\"number\" \n            placeholder=\"Enter user ID\" \n            {...register(\"user_id\", { required: true })} \n          />\n          {errors.user_id && <p style={{ color: \"red\" }}><small>User ID is required</small></p>}\n        </Form.Group>\n\n        <Form.Group controlId=\"destination\">\n          <Form.Label>Destination</Form.Label>\n          <Form.Control \n            type=\"text\" \n            placeholder=\"Enter destination\" \n            {...register(\"destination\", { required: true })} \n          />\n          {errors.destination && <p style={{ color: \"red\" }}><small>Destination is required</small></p>}\n        </Form.Group>\n\n        <Form.Group controlId=\"details\">\n          <Form.Label>Details</Form.Label>\n          <Form.Control \n            as=\"textarea\" \n            rows={5} \n            placeholder=\"Enter details\" \n            {...register(\"details\", { required: true })} \n          />\n          {errors.details && <p style={{ color: \"red\" }}><small>Details are required</small></p>}\n        </Form.Group>\n\n        <Form.Group controlId=\"date\">\n          <Form.Label>Date</Form.Label>\n          <Form.Control \n            type=\"date\" \n            {...register(\"date\", { required: true })} \n          />\n          {errors.date && <p style={{ color: \"red\" }}><small>Date is required</small></p>}\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">Save</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateHardwarePage;","\nimport React from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\nconst HardwareItem = ({ title, userId, date, details, onClick, onDelete }) => {\n    return (\n        <Card className=\"hardware-item\" onClick={onClick}>\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">User ID: {userId}</Card.Subtitle>\n                <Card.Text>\n                    <strong>Date Acquired:</strong> {date}\n                </Card.Text>\n                <Card.Text>{details}</Card.Text>\n                <Button variant='primary' onClick={onClick}>Update</Button>\n                <Button variant='danger' onClick={onDelete}>Delete</Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default HardwareItem;","\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';  \n// import './index.css';\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import App from './App';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from 'react'\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport HomePage from './Home';\nimport LoginPage from './LoginPage';\nimport SignUpPage from './SignUpPage';\nimport CreateHardwarePage from './CreateHardwarePage';\nimport HardwareItem from \"./Hardware\"; \n\n\n\n\nconst App =()=>{\n\n    return (\n        <Router>    \n        <div className =\"container\">\n           <Routes>\n            <Route path=\"/\" element={<HomePage/>}/>\n            <Route path=\"/home\" element={<HomePage />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/signup\" element={<SignUpPage />} />\n            <Route path=\"/createhardware\" element={<CreateHardwarePage />} />\n            <Route path=\"/hardware\" element={<HardwareItem />} />\n           </Routes>\n        </div>\n        </Router>\n    )\n}\n\n\n\nReactDOM.createRoot(<App/>, document.getElementById('root'));"],"sourceRoot":""}